let order = [];         // Random order.
let clickedOrder = [];  // Clicked order.
let score = 0;          // Score.

green  = document.querySelector('.green');
red    = document.querySelector('.red');
yellow = document.querySelector('.yellow');
blue   = document.querySelector('.blue');

//  Create the random order of the colors.
const shuffleOrder = () => {
    /*  --------------
    0 = green
    1 = red
    2 = yellow
    3 = blue
    -------------- */
    let colorOrder = Math.floor(Math.random() * 4);
    order[order.length] = colorOrder;
    clickedOrder = [];

    for (let i in order) {
        let elementColor = createColorElement(order[i]);
        lightColor(elementColor, Number(i) + 1);
    }
}

//  Light up the next color.
const lightColor = (element, number) => {
    number *= 500;
    setTimeout(() => {
        element.classList.add('selected');
    }, number-250)
    setTimeout(() => {
        element.classList.remove('selected')
    }, number)
}

//  Check if the clicked buttons has the same sequence of that generated by the game.
const checkOrder = () => {
    for (let i in clickedOrder) {
        if (clickedOrder[i] != order[i]) {
            gameOver();
            break;
        }
    }
    if (clickedOrder.length == order.length) {
        alert(`Pontuação: ${score}\nVocê acertou, miserávi!\nIniciando próximo nível...`)
        nextLevel();
    }
}

//  Function for user click.
const click = (color) => {
    clickedOrder[clickedOrder.length] = color;
    createColorElement(color).classList.add('selected');

    setTimeout(() => {
        createColorElement(color).classList.remove('selected');
        checkOrder();
    }, 250);
}

//  Return color function.
const createColorElement = (color) => {
    switch(color) {
        case 0:
            return green;
        case 1:
            return red;
        case 2:
            return yellow;
        case 3:
            return blue;
        case 4:
            return null;
    }
}

const nextLevel = () => {
    score++;
    shuffleOrder();
}

const gameOver = () => {
    alert(`Pontuação: ${score}!\nVocê mandou mal. Perdeu o jogo!\nClique em Ok para iniciar um novo jogo.`);
    order = [];
    clickedOder = [];

    playGame();
}

const playGame = () => {
    score = 0;
    alert('Bem vindo ao Gênesis! Iniciando um novo jogo.');
    
    nextLevel();
}

green.onclick = () => click(0);
red.onclick = () => click(1);
yellow.onclick = () => click(2);
blue.onclick = () => click(3);


playGame();